// fetch the files that xegos exist in
import { promises as fs } from "fs";

const commentType = {
    "NodeJS": {
        "start": "/*",
        "end": "*/"
    },
    "JavaScript": {
        "start": "/*",
        "end": "*/"
    },
    "TypeScript": {
        "start": "/*",
        "end": "*/"
    },
    "Python": {
        "start": "#",
        "end": ""
    },
};

const fileEndings = {
    "NodeJS": ".js",
    "JavaScript": ".js",
    "TypeScript": ".ts",
    "Python": ".py",
};


/*
This code is reading a text file and parsing the contents into xego commands.
- generated by stenography ðŸ¤–
*/
const readxegoTxtFile = async (path: string) => {
    const xegoFile = await fs.readFile(path + 'xego-recipe.txt', "utf8");


    let xegoCommand = ''
    let fileEnding = ''
    for (const [idx, line] of xegoFile.split("\n").entries()) {
        if (idx === 0) {
            fileEnding = fileEndings[line.split(":")[1].trim()]
        }
        const ll = await fs.readFile(path + 'xegos/' + line, "utf8");

        xegoCommand += ll + "\n"
    }

    console.log(xegoCommand)


    // await fs.writeFile(path + 'xego-tower' + fileEnding, xegoCommand);
}

readxegoTxtFile('').then(() => {
    console.log("done");
}).catch(err => {
    console.log(err);
});